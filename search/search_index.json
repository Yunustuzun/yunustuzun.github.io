{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"My daily writings and notes about software development \u00b6 \u26a1 Profile \u00b6 Sap ABAP, Fiori, and Hana technologies are implemented in many projects and proficient in a variety of different platforms. Experiences working on more than 50 SAP projects including MM, SD, PP, FI, CO, QM, WM, PM, HR, DMS, PS, BPC, Retail, and MDG modules. Advanced SAP ABAP development skills (Abap Objects, Abap 7.50, Hana System, Workflows, Adobe Interactive Forms) Advanced SAP Fiori development skills (SAPUI5, Launchpad, Gateway, Odata, jQuery, Configurations, Fiori Elements, Annotations) SAP Hana-based technologies experiences (Core Data Services, ABAP Managed Database Procedures, SQL Scripts, CDS Annotations, Abap Restful Programming Model) Other frontend and backend environments development experiences (NodeJS, ReactJS, AngularJS, Ionic, MongoDB, MySQL, Firebase, Python, Flask, SqlAlchemy, OR Tools, etc.) Dynamic programming methods, design patterns, solid principles, optimization problem-solving algorithms,","title":"Home"},{"location":"#my-daily-writings-and-notes-about-software-development","text":"","title":"My daily writings and notes about software development"},{"location":"#profile","text":"Sap ABAP, Fiori, and Hana technologies are implemented in many projects and proficient in a variety of different platforms. Experiences working on more than 50 SAP projects including MM, SD, PP, FI, CO, QM, WM, PM, HR, DMS, PS, BPC, Retail, and MDG modules. Advanced SAP ABAP development skills (Abap Objects, Abap 7.50, Hana System, Workflows, Adobe Interactive Forms) Advanced SAP Fiori development skills (SAPUI5, Launchpad, Gateway, Odata, jQuery, Configurations, Fiori Elements, Annotations) SAP Hana-based technologies experiences (Core Data Services, ABAP Managed Database Procedures, SQL Scripts, CDS Annotations, Abap Restful Programming Model) Other frontend and backend environments development experiences (NodeJS, ReactJS, AngularJS, Ionic, MongoDB, MySQL, Firebase, Python, Flask, SqlAlchemy, OR Tools, etc.) Dynamic programming methods, design patterns, solid principles, optimization problem-solving algorithms,","title":"\u26a1 Profile"},{"location":"fiori/custom-paginator/","text":"Custom paginator for Grid Table \u00b6 Intro \u00b6 In this blog post, I will mention how we add paginator to grid tables. The requirement was adding a paginator to the table using the 1.65 UI5 version. The paginator feature for the tables deprecated after the 1.38 version of UI5, so we couldn\u2019t add paginator in grid tables. I decided to write my own paginator feature for the UI table. When I started coding the paginator logic, It didn\u2019t seem very complex. But after some parts of filtering, sorting, changing page count functionality, it became more and more complex. Filtering, sorting operations require changing your paginator dynamically and page count, per item per page attributes became dependent on this functionality. For desktop devices For mobile devices Logic \u00b6 I perform the rendering process of the paginator after the page rendering finished. The point to be careful here is that we need to do the render paginator again depend on all sorting and filtering operations. _setTableSettings : function ( params ) { . . this . addPaginator ( \"productTable\" , aTableData ); . . oTable . attachSort ( null , function ( params ) { . . this . addPaginator ( \"productTable\" , aTable ); . . oTable . attachFilter ( null , function ( params ) { . this . addPaginator ( \"productTable\" , aTable ); . . Paginator UI should be rendered depending on which device work. Mobile and desktop versions use different controls. for mobile devices, select control preferred. if ( this . _devicePhone ) { oHBoxPagination . setWidth ( \"\" ); oHBox1 . setJustifyContent ( \"Center\" ); oHBox1 . addItem ( oHBoxPagination ); oHBox1 . addItem ( oLabel1 ); oComboBoxCount . setSelectedKey ( \"5\" ); oVBox1 . addItem ( oHBox1 ); oContentHolder . addContent ( oVBox1 ); } else { oHBox3 . addItem ( oLabel1 ); oHBox4 . addItem ( oComboBoxCount ); oHBox2 . addItem ( oHBox3 ); oHBox2 . addItem ( oHBox4 ); oHBox1 . addItem ( oHBoxPagination ); oHBox1 . addItem ( oHBox2 ); oVBox1 . addItem ( oHBox1 ); oContentHolder . addContent ( oVBox1 ); } The code block below is where the paginator algorithm starts. Depending on the page and item count, it fills the properties of the paginator object and inits it. Details of algorithm inside pagination object. this . oPagination . init ({ size : size , page : 1 , step : 5 , table : oTablex , countTable : countTable , countPerPage : countPerPage , tableData : tableData , devicePhone : this . _devicePhone , deviceTablet : this . _deviceTablet }); Next Step \u00b6 There aren\u2019t any codes in the view layer to create the paginator function. I aim to explain in the next blog post that how we can activate it with simple parameters in custom controls on the view layer instead of writing it in the controller. It will simplify and abstract all processes for reuse. You can view the demo application and see all resources here . Forks, pull-requests are welcome on Github . Enjoy!","title":"Custom paginator for Grid Table"},{"location":"fiori/custom-paginator/#custom-paginator-for-grid-table","text":"","title":"Custom paginator for Grid Table"},{"location":"fiori/custom-paginator/#intro","text":"In this blog post, I will mention how we add paginator to grid tables. The requirement was adding a paginator to the table using the 1.65 UI5 version. The paginator feature for the tables deprecated after the 1.38 version of UI5, so we couldn\u2019t add paginator in grid tables. I decided to write my own paginator feature for the UI table. When I started coding the paginator logic, It didn\u2019t seem very complex. But after some parts of filtering, sorting, changing page count functionality, it became more and more complex. Filtering, sorting operations require changing your paginator dynamically and page count, per item per page attributes became dependent on this functionality. For desktop devices For mobile devices","title":"Intro"},{"location":"fiori/custom-paginator/#logic","text":"I perform the rendering process of the paginator after the page rendering finished. The point to be careful here is that we need to do the render paginator again depend on all sorting and filtering operations. _setTableSettings : function ( params ) { . . this . addPaginator ( \"productTable\" , aTableData ); . . oTable . attachSort ( null , function ( params ) { . . this . addPaginator ( \"productTable\" , aTable ); . . oTable . attachFilter ( null , function ( params ) { . this . addPaginator ( \"productTable\" , aTable ); . . Paginator UI should be rendered depending on which device work. Mobile and desktop versions use different controls. for mobile devices, select control preferred. if ( this . _devicePhone ) { oHBoxPagination . setWidth ( \"\" ); oHBox1 . setJustifyContent ( \"Center\" ); oHBox1 . addItem ( oHBoxPagination ); oHBox1 . addItem ( oLabel1 ); oComboBoxCount . setSelectedKey ( \"5\" ); oVBox1 . addItem ( oHBox1 ); oContentHolder . addContent ( oVBox1 ); } else { oHBox3 . addItem ( oLabel1 ); oHBox4 . addItem ( oComboBoxCount ); oHBox2 . addItem ( oHBox3 ); oHBox2 . addItem ( oHBox4 ); oHBox1 . addItem ( oHBoxPagination ); oHBox1 . addItem ( oHBox2 ); oVBox1 . addItem ( oHBox1 ); oContentHolder . addContent ( oVBox1 ); } The code block below is where the paginator algorithm starts. Depending on the page and item count, it fills the properties of the paginator object and inits it. Details of algorithm inside pagination object. this . oPagination . init ({ size : size , page : 1 , step : 5 , table : oTablex , countTable : countTable , countPerPage : countPerPage , tableData : tableData , devicePhone : this . _devicePhone , deviceTablet : this . _deviceTablet });","title":"Logic"},{"location":"fiori/custom-paginator/#next-step","text":"There aren\u2019t any codes in the view layer to create the paginator function. I aim to explain in the next blog post that how we can activate it with simple parameters in custom controls on the view layer instead of writing it in the controller. It will simplify and abstract all processes for reuse. You can view the demo application and see all resources here . Forks, pull-requests are welcome on Github . Enjoy!","title":"Next Step"},{"location":"fiori/custom-tasks/","text":"SAP UI5 Custom Task Creation and Usage \u00b6 Intro \u00b6 In UI5 tooling, a custom task can be used to include various operations during the build phase. As a simple demo, I will explain how we will remove the i18n texts that are not used in the project. This custom task will save time when you combine your project files from different workspaces and make your i18n texts redundant. Prepare task configuration \u00b6 In the ui5.yaml file, we need to specify which task file to run and reference other tasks to which runtime to consider. In this example, our custom task will run before the standard task replaceCopyright . builder : customTasks : - name : cleanUnusedi18nKeys beforeTask : replaceCopyright --- # Task extension as part of your project specVersion : \"2.1\" kind : extension type : task metadata : name : cleanUnusedi18nKeys task : path : tasks/cleanUnusedi18nKeys.js Prepare task file \u00b6 It is necessary to export a function in the following structure in the file to callback a continuous operation. The workspace object allows us to perform the desired operations on the files. module . exports = async function ({ workspace , dependencies , taskUtil , options }) { . . Logic \u00b6 Our I18n keyword is searched for in the project files (controller, fragment, views). If it is not found, it is not inserted as a string in the new i18n file. All asynchronous functions are used with await keywords to continue with the synchronous process. const textResources = await workspace . byGlob ( \"**/*{view.xml,fragment.xml,controller.js,manifest.json}\" ); const i18nFiles = await workspace . byGlob ( \"**/*.properties\" ); . . await Promise . all ( i18nFiles . map ( async ( i18nFile ) => { . . lines = lines . filter (( l ) => l . found === true ); for ( let i = 0 ; i < lines . length ; i ++ ) { line = lines [ i ]; i18nString += line . key + \" = \" + line . value + \"\\n\" ; } i18nString . substring ( 0 , i18nString . length - 2 ); await i18nFile . setString ( i18nString ) await workspace . write ( i18nFile ). then (() => console . log ( 'DONE' )); . . Result \u00b6 With the ui5 build command, the i18n keys that were not used in the workspace were deleted during the build phase. Unused i18n texts will not exist anymore. after ui5 build command Final words \u00b6 I have uploaded the repository code to Github for you to use as a reference when building your custom task. The API reference is provided for you to extend your requirements. Additionally, various libraries like Babel, Grunt.js can be used while performing these operations. Custom tasks in UI5 Tooling allow us to perform file formatting, transpile, linting and other operations before or during the build phase. Thanks to contributors in the UI5 Ecosystem , we have many different out-of-box tasks that meet many requirements. Enjoy!","title":"SAP UI5 Custom Task Creation and Usage"},{"location":"fiori/custom-tasks/#sap-ui5-custom-task-creation-and-usage","text":"","title":"SAP UI5 Custom Task Creation and Usage"},{"location":"fiori/custom-tasks/#intro","text":"In UI5 tooling, a custom task can be used to include various operations during the build phase. As a simple demo, I will explain how we will remove the i18n texts that are not used in the project. This custom task will save time when you combine your project files from different workspaces and make your i18n texts redundant.","title":"Intro"},{"location":"fiori/custom-tasks/#prepare-task-configuration","text":"In the ui5.yaml file, we need to specify which task file to run and reference other tasks to which runtime to consider. In this example, our custom task will run before the standard task replaceCopyright . builder : customTasks : - name : cleanUnusedi18nKeys beforeTask : replaceCopyright --- # Task extension as part of your project specVersion : \"2.1\" kind : extension type : task metadata : name : cleanUnusedi18nKeys task : path : tasks/cleanUnusedi18nKeys.js","title":"Prepare task configuration"},{"location":"fiori/custom-tasks/#prepare-task-file","text":"It is necessary to export a function in the following structure in the file to callback a continuous operation. The workspace object allows us to perform the desired operations on the files. module . exports = async function ({ workspace , dependencies , taskUtil , options }) { . .","title":"Prepare task file"},{"location":"fiori/custom-tasks/#logic","text":"Our I18n keyword is searched for in the project files (controller, fragment, views). If it is not found, it is not inserted as a string in the new i18n file. All asynchronous functions are used with await keywords to continue with the synchronous process. const textResources = await workspace . byGlob ( \"**/*{view.xml,fragment.xml,controller.js,manifest.json}\" ); const i18nFiles = await workspace . byGlob ( \"**/*.properties\" ); . . await Promise . all ( i18nFiles . map ( async ( i18nFile ) => { . . lines = lines . filter (( l ) => l . found === true ); for ( let i = 0 ; i < lines . length ; i ++ ) { line = lines [ i ]; i18nString += line . key + \" = \" + line . value + \"\\n\" ; } i18nString . substring ( 0 , i18nString . length - 2 ); await i18nFile . setString ( i18nString ) await workspace . write ( i18nFile ). then (() => console . log ( 'DONE' )); . .","title":"Logic"},{"location":"fiori/custom-tasks/#result","text":"With the ui5 build command, the i18n keys that were not used in the workspace were deleted during the build phase. Unused i18n texts will not exist anymore. after ui5 build command","title":"Result"},{"location":"fiori/custom-tasks/#final-words","text":"I have uploaded the repository code to Github for you to use as a reference when building your custom task. The API reference is provided for you to extend your requirements. Additionally, various libraries like Babel, Grunt.js can be used while performing these operations. Custom tasks in UI5 Tooling allow us to perform file formatting, transpile, linting and other operations before or during the build phase. Thanks to contributors in the UI5 Ecosystem , we have many different out-of-box tasks that meet many requirements. Enjoy!","title":"Final words"},{"location":"fiori/debug-preload-files/","text":"Debug preload files in UI5 \u00b6 UI5 Inspector Browser Add-on should be installed. Use CTRL + ALT + Shift + P shortcut It will add ?sap-ui-debug=ttg/ parameter to url and you can debug original files.","title":"Debug preload files in UI5"},{"location":"fiori/debug-preload-files/#debug-preload-files-in-ui5","text":"UI5 Inspector Browser Add-on should be installed. Use CTRL + ALT + Shift + P shortcut It will add ?sap-ui-debug=ttg/ parameter to url and you can debug original files.","title":"Debug preload files in UI5"},{"location":"fiori/fundamentals-sap-fiori/","text":"Fundamentals for SAP Fiori Applications Intro \u00b6 SAP Fundamentals allows you to make Fiori applications using the desired UI framework (React, Vue, Angular) technology. With this solution SAP provide developers to build Fiori applications using the web-based technology with using open source NPM libraries. This allows developers to have more flexible structure and get benefits of various libraries. Fundamentals will not replace instead of UI5 \u200b\u200bframework technology.So the improvements in UI5 will not slow down or become outmoded. So Fiori Developers will not be dependent on a single technology and will have chance to choose their technology freely. You can follow the latest news from the Fundamental Github page You can see tecnical details , components below links for each technology. React Angular JS Vue Let\u2019s develop a simple application with React.JS Framework. To be able to develop a React.JS project, we need to have a package manager program on our computer. Among them the most popular is the NPM. You can also use YARN package manager if you want. We need to install Node.js from the link. Node.JS is the runtime environment for run javascript files in our PC. NPM will be installed defaultly if you finish the installation steps. After the installation, You can open the Visual Studio Code , type the following code on terminal screen for creating the React application. npx create-react-app <project name> We should type cd <project name> for being in project folder. Then we are installing react fundamental components with following command. npm install fundamental-styles fundamental-react When the installation process is finished, project folder will include three folder . node_modules folder, containing the library files public folder, that is open to external access, src folder, containing the source files No more , So we can use React\u2019s Fundamental components.We will create a simply web page with the Title, Text and Buttons in the Panel. Let\u2019s go to the App.js file. We need to import components before using them. Lets add the following code snippets to the top of the file. import { Panel } from 'fundamental-react/Panel' ; import { Button } from 'fundamental-react/Button' ; Let\u2019s delete all code div elements except of \u201cApp\u201d class div . And add the following snippets. <Panel> <Panel.Header> <Panel.Head description= \"New Fundamental App\" title= \"Fiori 3.0 with React\" /> <Panel.Actions> <Button compact glyph= \"add\" > Add Item </Button> </Panel.Actions> </Panel.Header> <Panel.Body> Open-source , New UI </Panel.Body> </Panel> After completing all code changes , we can start the application by typing npm start to the terminal. App will view like below screen. See the sample code in Github You can review the components above and use them in your developments. For more information click on the components. In Github community you can get more information and contribute to libraries.","title":"Fundamentals for SAP Fiori Applications Intro"},{"location":"fiori/fundamentals-sap-fiori/#fundamentals-for-sap-fiori-applications-intro","text":"SAP Fundamentals allows you to make Fiori applications using the desired UI framework (React, Vue, Angular) technology. With this solution SAP provide developers to build Fiori applications using the web-based technology with using open source NPM libraries. This allows developers to have more flexible structure and get benefits of various libraries. Fundamentals will not replace instead of UI5 \u200b\u200bframework technology.So the improvements in UI5 will not slow down or become outmoded. So Fiori Developers will not be dependent on a single technology and will have chance to choose their technology freely. You can follow the latest news from the Fundamental Github page You can see tecnical details , components below links for each technology. React Angular JS Vue Let\u2019s develop a simple application with React.JS Framework. To be able to develop a React.JS project, we need to have a package manager program on our computer. Among them the most popular is the NPM. You can also use YARN package manager if you want. We need to install Node.js from the link. Node.JS is the runtime environment for run javascript files in our PC. NPM will be installed defaultly if you finish the installation steps. After the installation, You can open the Visual Studio Code , type the following code on terminal screen for creating the React application. npx create-react-app <project name> We should type cd <project name> for being in project folder. Then we are installing react fundamental components with following command. npm install fundamental-styles fundamental-react When the installation process is finished, project folder will include three folder . node_modules folder, containing the library files public folder, that is open to external access, src folder, containing the source files No more , So we can use React\u2019s Fundamental components.We will create a simply web page with the Title, Text and Buttons in the Panel. Let\u2019s go to the App.js file. We need to import components before using them. Lets add the following code snippets to the top of the file. import { Panel } from 'fundamental-react/Panel' ; import { Button } from 'fundamental-react/Button' ; Let\u2019s delete all code div elements except of \u201cApp\u201d class div . And add the following snippets. <Panel> <Panel.Header> <Panel.Head description= \"New Fundamental App\" title= \"Fiori 3.0 with React\" /> <Panel.Actions> <Button compact glyph= \"add\" > Add Item </Button> </Panel.Actions> </Panel.Header> <Panel.Body> Open-source , New UI </Panel.Body> </Panel> After completing all code changes , we can start the application by typing npm start to the terminal. App will view like below screen. See the sample code in Github You can review the components above and use them in your developments. For more information click on the components. In Github community you can get more information and contribute to libraries.","title":"Fundamentals for SAP Fiori Applications Intro"},{"location":"personel/my-favorite-tool/","text":"My Favorite Tools \u00b6 It is my toolsets for Windows and IOS, Android Platforms. Some of them for development stuff, some others for daily usage. Daily \u00b6 7+ Taskbar Tweaker Allows you to configure various aspects of the Windows taskbar. Ditto is an extension to the standard windows clipboard. It saves each item placed on the clipboard allowing you access to any of those items at a later time. Lightshot is the fastest way to take a customizable screenshot Google Drive Backup and Sync is sync utility for files stored in folders on your computer to the cloud and stores them there. Qtranslate is a free translator for Windows Foxit Reader is small, fast, and feature-rich PDF reader WinDirStat is a disk usage statistics viewer and cleanup tool for various versions of Microsoft Windows. Grammarly is clear, mistake-free writing with Grammarly\u2019s AI-powered writing assistant. Adblock Plus for surf the web with no annoying ads Synthesia A fun way to learn how to play the piano. Yousician he simple, fun, and affordable way to learn an instrument Software Development \u00b6 Sap Gui is the graphical user interface client in SAP ERP\u2019s 3-tier architecture of database, application server, and client. Visual Studio Code is a code editing tool. Free. Built on open source. Runs everywhere. MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. Eclipse IDE is famous for our Java Integrated Development Environment (IDE). I am using it for SAP developments. Robo3T brings you support for MongoDB 4.0 and SCRAM-SHA-256, an upgraded mongo shell, support for importing from MongoDB SRV connection strings, among many other fixes and improvements. Photoshop is imaging and graphic design software is at the core of just about every creative project, from photo editing and compositing to digital painting, animation, and graphic design Filezilla is the free FTP solution. HTTPWatch is integrated with Chrome, Edge, and Internet Explorer browsers to show you the HTTP and HTTPS traffic that is generated when you access a web page. Instant Eyedropper is a free color detection tool for webmasters that will identify and automatically paste to the clipboard the HTML color code of any pixel on the screen with just a single mouse click. Postman is a collaboration platform for API development. Postman\u2019s features simplify each step of building an API and streamline collaboration so you can create better APIs\u2014faster. AutoHotkey is a free, open-source scripting language for Windows that allows users to easily create small to complex scripts for all kinds of tasks such as form fillers, auto-clicking, macros, etc.","title":"My Favorite Tools"},{"location":"personel/my-favorite-tool/#my-favorite-tools","text":"It is my toolsets for Windows and IOS, Android Platforms. Some of them for development stuff, some others for daily usage.","title":"My Favorite Tools"},{"location":"personel/my-favorite-tool/#daily","text":"7+ Taskbar Tweaker Allows you to configure various aspects of the Windows taskbar. Ditto is an extension to the standard windows clipboard. It saves each item placed on the clipboard allowing you access to any of those items at a later time. Lightshot is the fastest way to take a customizable screenshot Google Drive Backup and Sync is sync utility for files stored in folders on your computer to the cloud and stores them there. Qtranslate is a free translator for Windows Foxit Reader is small, fast, and feature-rich PDF reader WinDirStat is a disk usage statistics viewer and cleanup tool for various versions of Microsoft Windows. Grammarly is clear, mistake-free writing with Grammarly\u2019s AI-powered writing assistant. Adblock Plus for surf the web with no annoying ads Synthesia A fun way to learn how to play the piano. Yousician he simple, fun, and affordable way to learn an instrument","title":"Daily"},{"location":"personel/my-favorite-tool/#software-development","text":"Sap Gui is the graphical user interface client in SAP ERP\u2019s 3-tier architecture of database, application server, and client. Visual Studio Code is a code editing tool. Free. Built on open source. Runs everywhere. MySQL Workbench is a unified visual tool for database architects, developers, and DBAs. Eclipse IDE is famous for our Java Integrated Development Environment (IDE). I am using it for SAP developments. Robo3T brings you support for MongoDB 4.0 and SCRAM-SHA-256, an upgraded mongo shell, support for importing from MongoDB SRV connection strings, among many other fixes and improvements. Photoshop is imaging and graphic design software is at the core of just about every creative project, from photo editing and compositing to digital painting, animation, and graphic design Filezilla is the free FTP solution. HTTPWatch is integrated with Chrome, Edge, and Internet Explorer browsers to show you the HTTP and HTTPS traffic that is generated when you access a web page. Instant Eyedropper is a free color detection tool for webmasters that will identify and automatically paste to the clipboard the HTML color code of any pixel on the screen with just a single mouse click. Postman is a collaboration platform for API development. Postman\u2019s features simplify each step of building an API and streamline collaboration so you can create better APIs\u2014faster. AutoHotkey is a free, open-source scripting language for Windows that allows users to easily create small to complex scripts for all kinds of tasks such as form fillers, auto-clicking, macros, etc.","title":"Software Development"},{"location":"personel/my-favorite-websites/","text":"My Favorite Websites \u00b6 General \u00b6 tr.khanacademy.org A free, world-class education for anyone, anywhere. imgbb.com Easiest way to share images. sejda.com Easy, pleasant, and productive PDF editor ocr.space Free and online OCR convertio.co Convert your files to any format tureng.com Multilingual Dictionary offers you an extensive dictionary where you can search words by their fields of profession ego4u.com the fun way to learn English pianu.com The online piano that teaches you how to play tradeatlas.com Importers Search Engine mubi.com Watch truly great cinema.Cult, classic, and independent films. A new film every day. Development \u00b6 diagrams.net is open-source, online, desktop, and container deployable diagramming software clickup.com All your work in one place: Tasks, docs, chat, goals, & more. scotch.io fun and practical web development tutorials javascript.info The Modern JavaScript Tutorial developer.mozilla.org Learn the best of web development tutorialspoint.com Simply Easy Learning with clear, crisp, and to-the-point content on a wide range of technical and non-technical subjects codepen.io to build, test, and discover front-end code. kaggle.com you\u2019ll find all the code & data you need to do your data science work regexr.com an online tool to learn, build, & test Regular Expression reactioncommerce.com is an API-first, modular commerce stack made for ambitious brands and retailers netlify.com Run sites globally. Changes deploy automatically. observablehq.com is the magic notebook for exploring data and thinking with code. dev.to a community of software developers getting together to help one another out d3js.org is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS quickdatabasediagrams.com Draw database diagrams by typing. It\u2019s quick! rapidapi.com Find and Connect to Thousands of APIs madewithreact.com A collection of websites and applications using the React or React Native JavaScript library. reactjsexample.com A nice collection of often useful examples done in React.js. react.rocks has over 950 searchable examples with screenshots, online demos, and code js.coach Manually curated list of packages for React, Webpack, and others. Design \u00b6 cssmatic.com CSS tools for web designers moqups.com help you create and collaborate in real-time on wireframes, mockups, diagrams, and prototypes. keenthemes.com Bootstrap 4 HTML, Angular 9, React, VueJS & Laravel admin dashboard theme amcharts.com Programming library for all your data visualization needs. coolors.co The super fast color schemes generator! flaticon.com Access 2,956,000 vector icons iconfinder.com Search through 4,477,554 SVG icons behance.net showcases and discover creative work fonts.google.com is a library of 991 free licensed font families App Promote keywordkeg.com Suite of 5 keyword tools, focused only on keyword research searchman.com App Data Solutions to accelerate Ecosystem success videoscribe.co Make your own whiteboard video fast placeit.net Smart Templates Make Design Easy Gaming \u00b6 Age of Empires aoezone.net The international Age Of Empires community ageofempires.fandom.com has 3,825 articles and 11,859 images! aoe2stats.net Statistical data for all units, buildings and civilizations","title":"My Favorite Websites"},{"location":"personel/my-favorite-websites/#my-favorite-websites","text":"","title":"My Favorite Websites"},{"location":"personel/my-favorite-websites/#general","text":"tr.khanacademy.org A free, world-class education for anyone, anywhere. imgbb.com Easiest way to share images. sejda.com Easy, pleasant, and productive PDF editor ocr.space Free and online OCR convertio.co Convert your files to any format tureng.com Multilingual Dictionary offers you an extensive dictionary where you can search words by their fields of profession ego4u.com the fun way to learn English pianu.com The online piano that teaches you how to play tradeatlas.com Importers Search Engine mubi.com Watch truly great cinema.Cult, classic, and independent films. A new film every day.","title":"General"},{"location":"personel/my-favorite-websites/#development","text":"diagrams.net is open-source, online, desktop, and container deployable diagramming software clickup.com All your work in one place: Tasks, docs, chat, goals, & more. scotch.io fun and practical web development tutorials javascript.info The Modern JavaScript Tutorial developer.mozilla.org Learn the best of web development tutorialspoint.com Simply Easy Learning with clear, crisp, and to-the-point content on a wide range of technical and non-technical subjects codepen.io to build, test, and discover front-end code. kaggle.com you\u2019ll find all the code & data you need to do your data science work regexr.com an online tool to learn, build, & test Regular Expression reactioncommerce.com is an API-first, modular commerce stack made for ambitious brands and retailers netlify.com Run sites globally. Changes deploy automatically. observablehq.com is the magic notebook for exploring data and thinking with code. dev.to a community of software developers getting together to help one another out d3js.org is a JavaScript library for manipulating documents based on data. D3 helps you bring data to life using HTML, SVG, and CSS quickdatabasediagrams.com Draw database diagrams by typing. It\u2019s quick! rapidapi.com Find and Connect to Thousands of APIs madewithreact.com A collection of websites and applications using the React or React Native JavaScript library. reactjsexample.com A nice collection of often useful examples done in React.js. react.rocks has over 950 searchable examples with screenshots, online demos, and code js.coach Manually curated list of packages for React, Webpack, and others.","title":"Development"},{"location":"personel/my-favorite-websites/#design","text":"cssmatic.com CSS tools for web designers moqups.com help you create and collaborate in real-time on wireframes, mockups, diagrams, and prototypes. keenthemes.com Bootstrap 4 HTML, Angular 9, React, VueJS & Laravel admin dashboard theme amcharts.com Programming library for all your data visualization needs. coolors.co The super fast color schemes generator! flaticon.com Access 2,956,000 vector icons iconfinder.com Search through 4,477,554 SVG icons behance.net showcases and discover creative work fonts.google.com is a library of 991 free licensed font families App Promote keywordkeg.com Suite of 5 keyword tools, focused only on keyword research searchman.com App Data Solutions to accelerate Ecosystem success videoscribe.co Make your own whiteboard video fast placeit.net Smart Templates Make Design Easy","title":"Design"},{"location":"personel/my-favorite-websites/#gaming","text":"Age of Empires aoezone.net The international Age Of Empires community ageofempires.fandom.com has 3,825 articles and 11,859 images! aoe2stats.net Statistical data for all units, buildings and civilizations","title":"Gaming"}]}